name: run_benchmarks

on:
  repository_dispatch:
    types: [run_benchmarks]

jobs:
  run-benchmarks:
    runs-on: ubuntu-20.04
    steps:
      # - name: create a new AWS EC2 instance with Ubuntu 20.04 + Docker and wait until VM is ready
      #   id: container_creation
      #   run: |
      #     export instanceId=$(aws ec2 run-instances --image-id ami-0da952e8afc41613f --count 1 --instance-type t2.micro --instance-initiated-shutdown-behavior terminate --iam-instance-profile Arn=arn:aws:iam::400029883903:instance-profile/ec2-amazonSSMFullAccess --query 'Instances[0].InstanceId' --output text)
      #     aws ec2 wait instance-status-ok --instance-ids $instanceId
      #     echo "##[set-output name=instance_id;]$instanceId"
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: us-east-2

      # clone repository (how if non-public? or push image to ECR?), build docker image, run docker image in VM and shutdown VM afterwards
      - name: invoke benchmark via AWS SSM
        uses: peterkimzz/aws-ssm-send-command@1.0.1
        id: ssm
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          # instance-ids: ${{ steps.container_creation.outputs.instance_id }}
          instance-ids: i-02c20258e4880cfe6
          working-directory: /home/ubuntu
          command: mkdir -p /home/ubuntu/.ssh/; echo "${{ secrets.SOK_DEPLOYMENT_PRIVATE_KEY }}" > /home/ubuntu/.ssh/id_rsa; sudo chmod 600 /home/ubuntu/.ssh/id_rsa; ssh-keyscan github.com >> /home/ubuntu/.ssh/known_hosts; ssh-agent bash -c 'ssh-add /home/ubuntu/.ssh/id_rsa; git clone git@github.com:MarbleHE/SoK.git'; cd SEAL; sudo docker build -t seal_eval .; docker run -it -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -e AWS_DEFAULT_REGION=us-east-2 --rm seal_eval

      - name: Get the outputs
        run: echo "The Command id is ${{ steps.ssm.outputs.command-id }}"
