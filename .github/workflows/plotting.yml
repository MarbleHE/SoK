name: generate_plots

# Controls when the action will run
on:
  repository_dispatch:
    types: [generate_plots]

env:
  # S3 repository URL
  s3-repository-url: s3://sok-repository-eval-benchmarks

jobs:
  generate-plots:
    runs-on: ubuntu-20.04
    env:
      PLOT_SCRIPTS_DIR: "scripts/paper_plots"
    steps:
      - name: Check out the SoK repository and cd into repository folder
        uses: actions/checkout@v2
      - name: Determine foldername of latest run
        id: get_folder
        run: echo "::set-output name=foldername::$(aws s3 ls ${{ env.s3-repository-url }} |  awk '{print $2}' | grep "[[:digit:]]\{8\}_[[:digit:]]\{6\}__[[:digit:]]*/" | sort -nr | head -n1 | sed 's/.$//')"
      - name: Upload plotting scripts from repository to S3
        run: aws s3 cp --recursive ${PLOT_SCRIPTS_DIR} ${{ env.s3-repository-url }}/${{ steps.get_folder.outputs.foldername }}/plot/ --include "*.py"
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('${PLOT_SCRIPTS_DIR}/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install LaTeX as plotting scripts require it
        run: sudo apt-get install texlive texlive-latex-extra texlive-fonts-recommended dvipng
      - name: Install plotting script dependencies
        run: pip install -r ${PLOT_SCRIPTS_DIR}/requirements.txt
      - name: Generate plots, upload plots to S3 and post to Slack channel
        run: |
          python ${PLOT_SCRIPTS_DIR}/plot_all.py
          for filename in *.png
          do
            benchmark=$(echo ${filename%.png} | sed 's/plot_//g' | tr [a-z] [A-Z])
            curl -F file=@${filename} -F "title=Benchmark Result: ${benchmark}" -F $'initial_comment=ðŸš€ *New Benchmark Results available!*\nS3 URL: s3://sok-repository-eval-benchmarks/${{ steps.get_folder.outputs.foldername }}/\nRun ID: ${{ github.run_id }} (https://github.com/MarbleHE/SoK/actions/runs/${{ github.run_id }})\nGit commit: ${{ github.sha }}' -F channels=github-sok -H "Authorization: Bearer ${{ secrets.SLACK_APP_TOKEN }}" https://slack.com/api/files.upload
          done
